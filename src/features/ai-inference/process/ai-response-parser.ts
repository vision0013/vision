import { AIAnalysisResult } from '../types/ai-types';

/**
 * AI 응답 파싱 및 폴백 처리
 */
export class AIResponseParser {
  /**
   * 채팅 모드용 AI 응답 파싱 (텍스트 그대로 반환)
   */
  static parseChatResponse(response: string): string {
    try {
      console.log('💬 [ai-response-parser] Chat response:', response);

      // 채팅 모드에서는 텍스트 그대로 반환
      const cleanResponse = response.trim();
      return cleanResponse || '죄송합니다. 응답을 생성할 수 없습니다.';
    } catch (error: any) {
      console.error('❌ [ai-parser] Failed to process chat response:', error);
      return '죄송합니다. 응답 처리 중 오류가 발생했습니다.';
    }
  }

  /**
   * AI 응답을 파싱하여 AIAnalysisResult로 변환
   */
  static parseAIResponse(response: string, _originalCommand: string, mode?: string): AIAnalysisResult {
    try {
      console.log('🔍 [ai-response-parser] Raw AI response:', response);
      console.log('🔍 [ai-response-parser] Mode:', mode);

      // 채팅 모드에서는 텍스트 그대로 반환
      if (mode === 'chat') {
        const cleanResponse = response.trim();
        return {
          plan: [],
          reasoning: cleanResponse,
          rawResponse: cleanResponse
        };
      }

      const firstBrace = response.indexOf('{');
      const lastBrace = response.lastIndexOf('}');

      if (firstBrace === -1 || lastBrace === -1 || lastBrace < firstBrace) {
        console.warn('⚠️ [ai-response-parser] No valid JSON object found in response.');
        return { plan: [], reasoning: 'Fallback: No JSON object found in AI response.', rawResponse: response };
      }

      let jsonString = response.substring(firstBrace, lastBrace + 1);
      // 기본적인 JSON 정리
      jsonString = jsonString.replace(/\n/g, '\n').replace(/'/g, "'").replace(/"/g, '"').replace(/&/g, "&").replace(/\r/g, "\r\t").replace(/\t/g, "\t").replace(/\b/g, "\b").replace(/\f/g, "\f");
      jsonString = jsonString.replace(/[\u0000-\u0019]+/g,"");

      console.log('🔧 [ai-response-parser] Sanitized JSON string:', jsonString);
      
      const parsedResponse = JSON.parse(jsonString);

      if (parsedResponse.plan && Array.isArray(parsedResponse.plan)) {
        return {
          plan: parsedResponse.plan,
          reasoning: parsedResponse.reasoning || 'Plan generated by AI.',
          rawResponse: response,
        };
      } else {
        console.warn('⚠️ [ai-parser] Parsed JSON does not contain a valid "plan" array.');
        return { plan: [], reasoning: 'Fallback: Parsed JSON has no valid plan.', rawResponse: response };
      }
    } catch (error: any) {
      console.error('❌ [ai-parser] Failed to parse AI response JSON:', error);
      console.error('❌ [ai-parser] Original response was:', response);

      return { plan: [], reasoning: `Fallback: JSON parsing failed: ${error.message}`, rawResponse: response };
    }
  }
}